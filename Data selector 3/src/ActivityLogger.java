
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;     // My imports 
import java.io.IOException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author jackg
 */
public class ActivityLogger extends javax.swing.JFrame { // class extends JFrame 
    
    
    // By creating an activty log it helps the user to find the question they are looking for. By seeing other users activity, it shows them what they can search for and what results they can get.
    // It also helps the developer see what the users are doing and collect data on their users. 

    private String username; // creating variable username
    private Date date; // creating object date
    private String search; // creating variable search 
    File file = new File("LogUsers.txt"); // creating my file object with file name 
    DefaultTableModel model; // creating my table model object; DefaultTableModel

    public ActivityLogger() { // class constructor
        initComponents(); // initate components on create, e.g: buttons, table.
        readEntry(); // class readEntry method on create 

    }

    public void writeEntry(String log, Date date, String searched) throws IOException { // write entry with string and date parameters 

        BufferedWriter output = new BufferedWriter(new FileWriter(file, true)); // instantiate my buffered write and file write also open it in append mode.
        this.username = log; // assigning first string parameter passed to username variable 
        this.date = date; // assigning second date parameter passed to date variable 
        this.search = searched; // assigning third string parameter passed to searched variable 
        output.write(username + ";" + date + ";" + searched); // writing to my file the variables and splitting them with the delimeter ';'
        output.newLine(); // write new line in file
        output.close(); // close bufferedWriter

    }



    public void readEntry() { // read entry method 
        try {
            String columns[] = {"Username", "Date", "Searched"}; // declaring string array and assigning values 

            model = new DefaultTableModel(0, 3); // creating new defaultTableModel object and assigning 0 rows and 3 columns
            model.setColumnIdentifiers(columns); // setting the column titles to my array of strings
            logTable.setModel(model); // assinging my model to my JTable 

        } catch (NullPointerException e) { // catching if no string was null

        }

        String line; // declaring string line variable
        BufferedReader reader; // declaring bufferedReader object 
        try {
            reader = new BufferedReader(new FileReader(file)); // bufferedReader and reads file object that was created 
            while ((line = reader.readLine()) != null) { // while the line the reader is reading is not null 

                model.addRow(line.split(";")); // model adds a row and uses the split delimeter ';' to split up the strings  

            }
            reader.close(); // closes buffered reader
        } catch (IOException e) { // input output error
            JOptionPane.showMessageDialog(null, "Error"); // lets users know and developer that an error happened while trying to read file 

        }
  //      int y = 1;
 //       for (int i = 0; i < model.getRowCount(); i++) {
 
  //          logTable.getModel().setValueAt(y, i, 0);                  // trying to add index numbers to my table for each row 
 //           y++;
 //       }

    }

    public void getUsername(User user) throws IOException { // getUsername method with parameter for object user 
       
        GUI guiFrame = new GUI(); // declares GUI object from GUI class
        guiFrame.getUsername(user); //calls method getUsername from GUI class and gets the object user 
        // was testing but do not use this method anymore 

    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        logTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();

        logTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(logTable);

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(318, 318, 318)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        //  try {
        ///    GUI guiFrame = new GUI();  // used to open GUI frame but now GUI frame does not close when this frame opens 
        //    guiFrame.setVisible(true);
        this.setVisible(false); // closes this frame when button is clicked 
        //} catch (IOException ex) {
        //     Logger.getLogger(ActivityLogger.class.getName()).log(Level.SEVERE, null, ex);
        //  }
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActivityLogger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActivityLogger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActivityLogger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActivityLogger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActivityLogger().setVisible(true); // on create method is called opens this frame 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable logTable;
    // End of variables declaration//GEN-END:variables
}
